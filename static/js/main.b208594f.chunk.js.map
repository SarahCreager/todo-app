{"version":3,"sources":["context/settings.js","context/auth.js","components/login/Login.js","components/auth/Auth.js","hooks/form.js","components/header/Header.js","components/form/Form.js","components/listItem/ListItem.js","components/list/List.js","components/viewOptions/viewOptions.js","app.js","index.js"],"names":["SettingsContext","React","createContext","Settings","props","useState","numberOfItems","setNumberOfItems","showCompleted","setCompleted","state","number","boolean","Provider","value","children","AuthContext","testUsers","admin","username","password","role","capabilities","editor","writer","SECRET","process","REACT_APP_SECRET","AuthProvider","token","setToken","isLoggedIn","setLoggedIn","user","setUser","isAuthorized","capability","includes","login","validateToken","jwt","sign","logout","setLogInState","verify","console","log","e","cookie","save","useEffect","qs","URLSearchParams","window","location","search","cookieToken","load","get","Login","auth","useContext","setUsername","setPassword","handleChange","target","name","condition","onClick","onSubmit","preventDefault","placeholder","onChange","type","Auth","authorized","okToRender","useForm","callback","values","setValues","event","persist","handleSubmit","Header","id","Group","align","Alignment","LEFT","Heading","incomplete","Divider","Form","defaultValue","min","max","ListItem","settings","interactive","elevation","Elevation","FOUR","item","text","assignee","difficulty","toggleComplete","complete","deleteItem","toString","List","currentPage","setPage","changePage","lastIndex","firstIndex","listItems","list","slice","map","length","ViewOptions","radioSelected","setRadioSelected","stringifiedObject","JSON","stringify","localStorage","setItem","label","currentTarget","selectedValue","parseInt","step","App","setList","setIncomplete","uuid","alert","incompleteCount","filter","document","title","storage","getItem","parsedObject","parse","items","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b208594f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// our settings context singleton from which we can derive/ get access to our Provider\nexport const SettingsContext = React.createContext();\n\nfunction Settings(props) {\n\n  // In order for context behaviors to hook into our react application, we need to define them with useState hook\n  const [numberOfItems, setNumberOfItems] = useState(4);\n  const [showCompleted, setCompleted] = useState(false);\n\n  const state = {\n    numberOfItems,\n    showCompleted,\n    setNumberOfItems:(number) => {\n      setNumberOfItems(number);\n    },\n    setCompleted:(boolean) => {\n      setCompleted(boolean);\n    }\n  };\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default Settings;\n","import React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const AuthContext = React.createContext();\n\n// dummy users for testing\nconst testUsers = {\n  admin: {\n    username: 'admin',\n    password: 'test',\n    role: 'admin',\n    capabilities: ['create', 'read', 'update', 'delete'],\n  },\n  editor: {\n    username: 'editor',\n    password: 'test',\n    role: 'editor',\n    capabilities: ['read', 'update'],\n  },\n  writer: {\n    username: 'writer',\n    password: 'test',\n    role: 'writer',\n    capabilities: ['create'],\n  },\n};\n\nconst SECRET = process.env.REACT_APP_SECRET || 'secretstring';\n\nfunction AuthProvider ({children}) {\n  const [token, setToken] = useState(null);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  let state = {\n    isLoggedIn,\n    user,\n    isAuthorized,\n    login,\n    logout,\n    token,\n    validateToken,\n    setLogInState\n  };\n\n  function isAuthorized(capability) {\n    // check user capilities and return a boolean\n    return user?.capabilities?.includes(capability);\n  }\n\n  function login(username, password) {\n    let user = testUsers[username];\n    if (user && user.password === password) {\n      const token = jwt.sign(user, SECRET);\n      validateToken(token);\n    }\n  }\n\n  function logout() {\n    if (isLoggedIn) {\n      setLogInState(false, null, {});\n    }\n  }\n\n  function validateToken(token) {\n    try{\n      let user = jwt.verify(token, SECRET);\n      console.log('validate Token User:', user);\n      setLogInState(true, token, user);\n    } catch (e) {\n      setLogInState(false, null, {});\n      console.log('Error validating token:', e);\n    }\n  }\n\n  function setLogInState(boolean, token, user) {\n    cookie.save('auth', token);\n    setLoggedIn(boolean);\n    setToken(token);\n    setUser(user);\n  }\n\n  useEffect(() => {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load('auth');\n    const token = qs.get('token') || cookieToken || null;\n    validateToken(token);\n    console.log('useeffect token:', token);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={state}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthProvider;\n","import React, { useContext, useState } from 'react';\nimport { When } from 'react-if';\n\nimport { AuthContext } from '../../context/auth.js';\n\nfunction Login() {\n  let auth = useContext(AuthContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleChange (e) {\n    let { name, value } = e.target;\n\n    if (name === 'username') setUsername(value);\n    if (name === 'password') setPassword(value);\n  }\n\n  function handleSubmit (e) {\n    console.log('submit');\n    e.preventDefault();\n    auth.login(username, password);\n  }\n\n  return (\n    <>\n      <When condition={auth.isLoggedIn}>\n        <button onClick={auth.logout}>Log Out</button>\n      </When>\n\n      <When condition={!auth.isLoggedIn}>\n        <form onSubmit={handleSubmit}>\n          <input\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={handleChange}\n          />\n          <input\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </When>\n    </>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { useContext } from 'react';\nimport { When } from 'react-if';\n\nimport { AuthContext } from '../../context/auth.js';\n\nfunction Auth(props) {\n\n  let auth = useContext(AuthContext);\n\n  const isLoggedIn = auth.isLoggedIn;\n  const authorized = props.capability ? auth.isAuthorized(props.capability) : true;\n  const okToRender = isLoggedIn && authorized;\n\n  return (\n    <When condition={okToRender}>\n      {props.children}\n    </When>\n  );\n}\n\nexport default Auth;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import { Navbar, Alignment } from '@blueprintjs/core';\nimport './header.scss';\n\n\nfunction Header(props) {\n\n  return (\n    <Navbar id='navBar'>\n      <Navbar.Group align={Alignment.LEFT}>\n        <Navbar.Heading id='heading'>To Do List: {props.incomplete} items pending</Navbar.Heading>\n        <Navbar.Divider />\n      </Navbar.Group>\n    </Navbar>\n  );\n}\n\nexport default Header;\n\n","import './form.scss';\n\nfunction Form(props) {\n\n\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <h2>Add To Do Item</h2>\n        <label>\n          <span>To Do Item</span>\n          <input onChange={props.handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n        </label>\n        <label>\n          <span>Assigned To</span>\n          <input onChange={props.handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n        </label>\n        <label>\n          <span>Difficulty</span>\n          <input onChange={props.handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n        </label>\n        <label>\n          <button type=\"submit\">Add Item</button>\n        </label>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport { useContext } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport './listItem.scss';\n\nconst ListItem = (props) => {\n  const settings = useContext(SettingsContext);\n  settings;\n\n  function handleComplete() {\n    props.toggleComplete(props.item.id);\n    if (props.item.complete === true && settings.showCompleted === 'false') {\n      props.deleteItem(props.item.id);\n    }\n  }\n\n  return (\n    <Card id='todoCard' interactive={true} elevation={Elevation.FOUR} key={props.item.id}>\n      <h5>{props.item.text}</h5>\n      <p><small>Assigned to: {props.item.assignee}</small></p>\n      <p><small>Difficulty: {props.item.difficulty}</small></p>\n      <Button id=\"complete\" onClick={handleComplete}>Complete: {props.item.complete.toString()}\n      </Button>\n      <Button id=\"delete\" onClick={() => props.deleteItem(props.item.id)}>Delete</Button>\n    </Card>\n  );\n};\n\nexport default ListItem;\n","import { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport ListItem from '../listItem/ListItem.js';\nimport './list.scss';\n\nfunction List(props) {\n\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  const [currentPage, setPage] = useState(1);\n\n  function changePage(e) {\n    if (e.target.id === 'next') {\n      setPage(currentPage + 1);\n      return;\n    } else if (e.target.id === 'prev') {\n      setPage(currentPage - 1);\n      return;\n    }\n    return;\n  }\n\n  const lastIndex = currentPage * settings.numberOfItems;\n  const firstIndex = lastIndex - settings.numberOfItems;\n  const listItems = props.list.slice(firstIndex, lastIndex);\n\n  return (\n    <>\n      <div id='cardContainer'>\n        {listItems.map(item => (\n          <ListItem key = {item.id} item={item} toggleComplete={props.toggleComplete} deleteItem={props.deleteItem} />\n        ))}\n      </div>\n      <div id=\"nextPrevButtons\">\n        {currentPage > 1 ? (\n          <button id=\"prev\" onClick={changePage} type=\"button\">\n            Back\n          </button>\n        ) : null}\n        {props.list.length > settings.numberOfItems ? (\n          <button id=\"next\" onClick={changePage} type=\"button\">\n            Next\n          </button>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default List;\n","import { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport { RadioGroup, Radio } from '@blueprintjs/core';\nimport './viewOptions.scss';\n\nfunction ViewOptions() {\n  // pass our context singleton into our useContext hook\n  const settings = useContext(SettingsContext);\n  settings;\n\n  const [radioSelected, setRadioSelected] = useState(false);\n\n  function handleRadioChange(e) {\n    settings.setCompleted(e.target.value);\n    console.log(settings.showCompleted);\n    setRadioSelected(e.currentTarget.value);\n  }\n\n  function handleInputChange(e) {\n    settings.setNumberOfItems(parseInt(e.target.value));\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    // put items in storage\n    let stringifiedObject = JSON.stringify({ numberOfItems: settings.numberOfItems, showCompleted: settings.showCompleted });\n    localStorage.setItem('userPreferences', stringifiedObject);\n  }\n\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <h2>Change Your View</h2>\n        <RadioGroup\n          label=\"Show Completed Tasks?\"\n          onChange={handleRadioChange}\n          selectedValue={radioSelected}\n        >\n          <Radio label=\"Yes\" value='true' />\n          <Radio label=\"No\" value='false' />\n        </RadioGroup>\n        <label>\n          <span>Tasks per page</span>\n          <input onChange={handleInputChange} min=\"0\" step=\"1\" name=\"tasksPerPage\" type=\"number\" />\n        </label>\n        <label>\n          <button type=\"submit\">Add Item</button>\n        </label>\n      </form>\n    </>\n  );\n}\n\n\n\nexport default ViewOptions;\n","import React from 'react';\nimport './app.scss';\nimport Login from './components/login/Login.js';\nimport Auth from './components/auth/Auth.js';\nimport { useEffect, useState, useContext } from 'react';\nimport useForm from './hooks/form.js';\nimport { v4 as uuid } from 'uuid';\nimport Header from './components/header/Header.js';\nimport Form from './components/form/Form.js';\nimport List from './components/list/List.js';\nimport ViewOptions from './components/viewOptions/viewOptions.js';\nimport { SettingsContext } from './context/settings.js';\nimport './app.scss';\n\nexport default function App() {\n  const settings = useContext(SettingsContext);\n  settings;\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n\n    if (!list.includes(item)) {\n      setList([...list, item]);\n    } else {\n      alert('That to-do item already exsists!');\n    }\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n\n    const items = list.map(item => {\n      if (item.id === id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n\n  useEffect(() => {\n    // pull user preferences from storage on page load\n    let storage = localStorage.getItem('userPreferences');\n    if (storage) {\n      let parsedObject = JSON.parse(storage);\n      console.log('local storage', parsedObject);\n      settings.setNumberOfItems(parsedObject.numberOfItems);\n      settings.setCompleted(parsedObject.showCompleted);\n    }\n  }, []);\n\n  return (\n    <>\n      <Login />\n      <Auth capability=\"read\" capability=\"create\">\n        <Header incomplete={incomplete} />\n      </Auth>\n      <Auth capability=\"create\">\n        <div id=\"formContainer\">\n          <ViewOptions />\n          <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n        </div>\n      </Auth>\n      <Auth capability=\"read\" capability=\"create\">\n        <List list={list} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n      </Auth>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SettingsProvider from './context/settings.js';\nimport AuthProvider from './context/auth.js';\nimport App from './app.js';\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SettingsProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </SettingsProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["context/settings.js","hooks/form.js","components/header/Header.js","components/form/Form.js","components/listItem/ListItem.js","components/list/List.js","components/todo/todo.js","app.js","index.js"],"names":["SettingsContext","React","createContext","Settings","props","useState","numberOfItems","completed","defaultSortField","state","Provider","value","children","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Header","id","Group","align","Alignment","LEFT","Heading","incomplete","Divider","Form","onSubmit","onChange","type","placeholder","defaultValue","min","max","ListItem","interactive","elevation","Elevation","FOUR","item","text","assignee","difficulty","onClick","toggleComplete","complete","toString","deleteItem","List","settings","useContext","currentPage","setPage","changePage","e","lastIndex","firstIndex","listItems","list","slice","map","length","ToDo","setList","setIncomplete","uuid","useEffect","incompleteCount","filter","document","title","items","App","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7053ca22.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// our settings context singleton from which we can derive/ get access to our Provider\nexport const SettingsContext = React.createContext();\n\nfunction Settings(props) {\n\n  let [state] = useState({\n    numberOfItems: 4,\n    completed: false,\n    defaultSortField: 'difficulty',\n  });\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default Settings;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import { Navbar, Alignment } from '@blueprintjs/core';\nimport './header.scss';\n\n\nfunction Header(props) {\n\n  return (\n    <Navbar id='navBar'>\n      <Navbar.Group align={Alignment.LEFT}>\n        <Navbar.Heading>To Do List: {props.incomplete} items pending</Navbar.Heading>\n        <Navbar.Divider />\n      </Navbar.Group>\n    </Navbar>\n  );\n}\n\nexport default Header;\n\n","import './form.scss';\n\nfunction Form(props) {\n\n\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <h2>Add To Do Item</h2>\n        <label>\n          <span>To Do Item</span>\n          <input onChange={props.handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n        </label>\n        <label>\n          <span>Assigned To</span>\n          <input onChange={props.handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n        </label>\n        <label>\n          <span>Difficulty</span>\n          <input onChange={props.handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n        </label>\n        <label>\n          <button type=\"submit\">Add Item</button>\n        </label>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport './listItem.scss';\n\nconst ListItem = (props) => {\n  return (\n    <Card id='todoCard' interactive={true} elevation={Elevation.FOUR} key={props.item.id}>\n      <h5>{props.item.text}</h5>\n      <p><small>Assigned to: {props.item.assignee}</small></p>\n      <p><small>Difficulty: {props.item.difficulty}</small></p>\n      <Button onClick={() => props.toggleComplete(props.item.id)}>Complete: {props.item.complete.toString()}\n      </Button>\n      <Button onClick={() => props.deleteItem(props.item.id)}>Delete</Button>\n    </Card>\n  );\n};\n\nexport default ListItem;\n","import { useContext, useState } from 'react';\nimport { SettingsContext } from '../../context/settings.js';\nimport ListItem from '../listItem/ListItem.js';\nimport './list.scss';\n\nfunction List(props) {\n\n  // pass our context singleton into our useContext hook\n  let settings = useContext(SettingsContext);\n  let [currentPage, setPage] = useState(1);\n\n  function changePage(e) {\n    if (e.target.id === 'next') {\n      setPage(currentPage + 1);\n      return;\n    } else if (e.target.id === 'prev') {\n      setPage(currentPage - 1);\n      return;\n    }\n    return;\n  }\n\n  const lastIndex = currentPage * settings.numberOfItems;\n\n  const firstIndex = lastIndex - settings.numberOfItems;\n\n  const listItems = props.list.slice(firstIndex, lastIndex);\n\n  return (\n    <>\n      <div id='cardContainer'>\n        {listItems.map(item => (\n          <ListItem item={item} toggleComplete={props.toggleComplete} deleteItem={props.deleteItem} />\n        ))}\n      </div>\n      <div>\n        {currentPage > 1 ? (\n          <button id=\"prev\" onClick={changePage} type=\"button\">\n            Back\n          </button>\n        ) : null }\n        {props.list.length > settings.numberOfItems ? (\n          <button id=\"next\" onClick={changePage} type=\"button\">\n            Next\n          </button>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport useForm from '../../hooks/form.js';\nimport { v4 as uuid } from 'uuid';\nimport Header from '../header/Header.js';\nimport Form from '../form/Form.js';\nimport List from '../list/List.js';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter( item => item.id !== id );\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n\n    const items = list.map( item => {\n      if ( item.id === id ) {\n        item.complete = ! item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <Header incomplete={incomplete}/>\n      <Form handleSubmit={handleSubmit} handleChange={handleChange}/>\n      <List list={list} toggleComplete={toggleComplete} deleteItem={deleteItem}/>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <ToDo />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Settings from './context/settings.js';\nimport App from './app.js';\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Settings>\n      <App />\n    </Settings>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}